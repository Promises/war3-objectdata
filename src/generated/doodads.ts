import Modification from 'mdx-m3-viewer/dist/cjs/parsers/w3x/w3u/modification';
import { OEContainer } from '../container';
import { war3ToTS, tsToWar3 } from '../utils';
import * as objects from './doodadsdata.json';

export interface Doodad {
  name: string;
  category: string;
  tilesets: string;
  hasTilesetSpecificData: boolean;
  modelFile: string;
  loopingSound: string;
  selectionSize: number;
  defaultScale: number;
  minimumScale: number;
  maximumScale: number;
  canPlaceRandomScale: boolean;
  useClickHelper: boolean;
  ignoreModelClicks: boolean;
  maximumPitchAngleDegrees: number;
  maxRollAngleDegrees: number;
  visibilityRadius: number;
  walkable: boolean;
  variations: number;
  placeableOnCliffs: boolean;
  placeableOnWater: boolean;
  floats: boolean;
  hasAShadow: boolean;
  showInFog: boolean;
  animateInFog: boolean;
  fixedRotation: number;
  pathingTexture: string;
  minimapShow: boolean;
  minimapUseCustomColor: boolean;
  minimapColor1Red: number;
  minimapColor2Green: number;
  minimapColor3Blue: number;
  tintingColor1Red: number;
  tintingColor2Green: number;
  tintingColor3Blue: number;
  onUserSpecifiedList: boolean;
}

export enum Doodads {
  AlonsusChapel = 'YOsb',
  Altar = 'OOal',
  AndrohalClockTower = 'ACt0',
  AndrohalClockTowerDestroyed = 'ACtd',
  ArcheryTarget = 'LOar',
  Archway = 'CSra',
  Archway2 = 'NSra',
  Archway3 = 'YSaw',
  Archway4 = 'DSar',
  Archway5 = 'GSar',
  Archway6 = 'ZSas',
  Archway7 = 'ZSab',
  ArchwayAngled = 'CSr1',
  ArchwayAngled2 = 'NSr1',
  ArchwayAngled3 = 'YSa1',
  ArchwayAngled4 = 'DSa1',
  ArchwayAngled5 = 'GSa1',
  ArchwayAngled6 = 'ZSs1',
  ArchwayAngled7 = 'ZSb1',
  ArchwayAngledIcecrownStone = 'ISs1',
  ArchwayAngledIcy = 'ISa1',
  ArchwayAngledNatural = 'ZSa1',
  ArchwayAngledOutland = 'OSa1',
  ArchwayAngledStone = 'DSa2',
  ArchwayAngledStone2 = 'GSa2',
  ArchwayEntrance = 'YSa2',
  ArchwayEntranceAngled = 'YSa3',
  ArchwayIcecrownStone = 'ISsr',
  ArchwayIcy = 'ISar',
  ArchwayNatural = 'ZSar',
  ArchwayOutland = 'OSar',
  ArchwayRuined = 'JSar',
  ArchwayRuined2 = 'JSax',
  ArchwayStandardDimension = 'ASd0',
  ArchwayStone = 'DSah',
  ArchwayStone2 = 'GSah',
  BannerHuman = 'LOh1',
  BannerLongBlue = 'YObb',
  BannerLongWhite = 'YOwb',
  BannerOrc = 'LOo1',
  BannerTutorialOrc = 'LOo2',
  Barn = 'LSba',
  BarnScorched = 'LSsb',
  BarrensTreeIndestructible = 'BPtw',
  Bats = 'NObt',
  Bench = 'DObh',
  BenchAngledStone = 'YOsa',
  BenchAngledWood = 'YOwa',
  BenchStone = 'YObs',
  BenchWood = 'YObw',
  Birds = 'AObd',
  BlightedMist = 'CObl',
  BlocksRuined = 'ASHB',
  BlocksRuined2 = 'CSbl',
  Bones = 'BObo',
  Bones2 = 'NObo',
  BonesRib = 'LOrb',
  Bookshelf = 'DObk',
  BookshelfAngled = 'DOab',
  BookshelfLarge = 'DOkb',
  BookshelfLong = 'DObw',
  Brazier = 'LObr',
  BrazierGlowing = 'LObz',
  BrazierSkull = 'AObr',
  BrillClockTower = 'BCt0',
  BrokenColumn = 'ASbc',
  BrokenColumn2 = 'CSbc',
  Bubbles = 'ZWbg',
  BubblesSteam = 'IWbg',
  Building = 'VSvb',
  BuildingA = 'BA00',
  BuildingB = 'BB00',
  BuildingC = 'BC00',
  Bush = 'APbs',
  Bush2 = 'CPbs',
  Bush3 = 'YPbs',
  Cactus = 'BPca',
  CageEmpty = 'LOce',
  CageTrashed = 'LOct',
  CameraProp = 'YOcp',
  Cathedral = 'YSca',
  CathedralRuined = 'YScr',
  Cattail = 'APct',
  Cattail2 = 'CPct',
  Cattail3 = 'ZPru',
  CauldronWithHeads = 'LOca',
  CaveCityCliffEast = 'YCc4',
  CaveCityCliffNorthLeft = 'YCc2',
  CaveCityCliffNorthRight = 'YCc1',
  CaveCityCliffWest = 'YCc3',
  CaveNaturalCliffEast = 'YCr4',
  CaveNaturalCliffNorthLeft = 'YCr2',
  CaveNaturalCliffNorthRight = 'YCr1',
  CaveNaturalCliffWest = 'YCr3',
  ChainPost = 'DOcp',
  Chains = 'DOch',
  Chair = 'DOcr',
  Chair2 = 'IOch',
  ChairIcey = 'IOic',
  CityBuildingBaseRuined = 'JSr6',
  CityBuildingDiagonal1Green = 'YS01',
  CityBuildingDiagonal1Purple = 'YS02',
  CityBuildingDiagonal1Red = 'YS00',
  CityBuildingDiagonal2Blue = 'YS08',
  CityBuildingDiagonal2Green = 'YS07',
  CityBuildingDiagonal2Purple = 'YS06',
  CityBuildingHorizontalBlue = 'YS03',
  CityBuildingHorizontalGreen = 'YS04',
  CityBuildingHorizontalRed = 'YS05',
  CityBuildingLargeBaseRuined = 'JSrc',
  CityBuildingLargeDiagonal1Red = 'YS13',
  CityBuildingLargeDiagonal2Blue = 'YS15',
  CityBuildingLargeHorizontalGreen = 'YS14',
  CityBuildingLargeRuinedDiagonal1Red = 'YSrd',
  CityBuildingLargeRuinedDiagonal2Blue = 'YSrf',
  CityBuildingLargeRuinedHorizontalGreen = 'YSre',
  CityBuildingLargeRuinedVerticalPurple = 'YSrc',
  CityBuildingLargeVerticalPurple = 'YS12',
  CityBuildingRowGroup1 = 'YSbr',
  CityBuildingRowGroup2 = 'YSb1',
  CityBuildingRowGroup3 = 'YSb2',
  CityBuildingRuinedDiagonal1Green = 'YSr1',
  CityBuildingRuinedDiagonal1Purple = 'YSr2',
  CityBuildingRuinedDiagonal1Red = 'YSr0',
  CityBuildingRuinedDiagonal2Blue = 'YSr8',
  CityBuildingRuinedDiagonal2Green = 'YSr7',
  CityBuildingRuinedDiagonal2Purple = 'YSr6',
  CityBuildingRuinedHorizontalBlue = 'YSr3',
  CityBuildingRuinedHorizontalGreen = 'YSr4',
  CityBuildingRuinedHorizontalRed = 'YSr5',
  CityBuildingRuinedVerticalBlue = 'YSrb',
  CityBuildingRuinedVerticalGreen = 'YSr9',
  CityBuildingRuinedVerticalRed = 'YSra',
  CityBuildingVerticalBlue = 'YS11',
  CityBuildingVerticalGreen = 'YS09',
  CityBuildingVerticalRed = 'YS10',
  CityTower = 'YOmb',
  CliffCave = 'LCc0',
  CliffCave2 = 'LCc2',
  ColumnAngledDouble = 'YSc5',
  ColumnBroken = 'NObc',
  ColumnDouble = 'YScd',
  ColumnRuined = 'JSco',
  ColumnRuinedWithCap = 'JScx',
  ColumnSemiCircle = 'YScs',
  ColumnSemiCircle2 = 'YSc2',
  ColumnSemiCircle3 = 'YSc3',
  ColumnSemiCircle4 = 'YSc4',
  ColumnSemiCircleRuined = 'JScs',
  ColumnSemiCircleRuined2 = 'JSc2',
  ColumnSemiCircleRuined3 = 'JSc3',
  ColumnSemiCircleRuined4 = 'JSc4',
  ColumnSingle = 'YSco',
  Coral = 'ZWcl',
  CoralArch = 'ZWca',
  Corn = 'LPcr',
  CorpseImpaled = 'LOic',
  CorpseOfGulDan = 'CGd0',
  CorpseSitting = 'LOsc',
  Crater = 'BRcr',
  CraterFiery = 'DRfc',
  CraterFiery2 = 'GRfc',
  CratesEmpty = 'YOec',
  Crypt = 'NSct',
  Crystal = 'IRcy',
  DalaranVioletCitadelRuined = 'ZOvr',
  Dust = 'ZZcd',
  ElvenBuilding = 'LSeb',
  EnclaveHouse = 'EH00',
  EnclaveHouseB = 'EHb0',
  EnclaveMainStructure = 'EMs0',
  EnclaveSpire = 'ES00',
  EnclaveTurret = 'ET01',
  EnergyField = 'YZef',
  ExteriorGate = 'EG00',
  ExteriorMainTower = 'EMt0',
  ExteriorTower = 'ET00',
  ExteriorWall = 'EW00',
  EyeOfSargeras = 'ZZys',
  FarmScorched = 'LSsf',
  Fence = 'NOfl',
  FenceAngled = 'NOal',
  FenceAngledLong = 'VOal',
  FenceAngledShort = 'VOas',
  FenceLong = 'VOfl',
  FenceShort = 'VOfs',
  Fire = 'YOtf',
  FireBlue = 'YOfb',
  FireGust = 'YOf3',
  FirePit = 'NOfp',
  FirePitTrashed = 'NOft',
  FirePitWithPig = 'NOfg',
  FireSmall = 'YOfs',
  Fish = 'AWfs',
  FishDead = 'COdf',
  FishGreen = 'ZWfs',
  FishSchool = 'ZWsf',
  Fissure = 'BRfs',
  Fissure2 = 'CRfs',
  Fissure3 = 'NRfs',
  FlameGrate = 'OOgr',
  Flies = 'LOfl',
  FloatingBox = 'NWfb',
  FloatingPanel = 'NWpa',
  FloatingPlank = 'NWfp',
  FlowerBedAngled = 'YPfa',
  FlowerBedStraight = 'YPfs',
  Flowers = 'ZPfw',
  FootprintsDemonic = 'ZZdt',
  Fountain = 'YOfn',
  FountainRuined = 'YOfr',
  Geyser = 'BRgs',
  Glacier = 'IRgc',
  GlowingRunes = 'JOgr',
  GrainScorched = 'LPcw',
  Granary = 'LSgr',
  GranaryScorched = 'LSgs',
  Grave = 'LOgr',
  GraveCityscape = 'YOgr',
  GravePeasant = 'LOpg',
  GraveStone = 'NOgv',
  GuldansRunes = 'ZZgr',
  Hay = 'LOhb',
  HayCart = 'LOch',
  HayCartBroken = 'LOcb',
  HayCartBrokenInfected = 'LOxx',
  HayCartInfected = 'LOrc',
  HayClump = 'LOhc',
  HayInfected = 'LOrh',
  HeadOnSpear = 'LOsh',
  HearthglenAbbey = 'HA00',
  HighElfCrestHangingBanners = 'HEch',
  HighElfCrestStandingBanners = 'HEcs',
  IceBlock = 'IRic',
  IceClaws = 'NRic',
  IceFloating = 'IWie',
  IceFloe = 'NWf1',
  IceFloe2 = 'NWf2',
  IceFloe3 = 'NWf3',
  IceFloe4 = 'NWf4',
  IceSpiderOnPedestal = 'IOss',
  Iceberg = 'NWi1',
  Iceberg2 = 'NWi2',
  Iceberg3 = 'NWi3',
  Iceberg4 = 'NWi4',
  IcyWaterfall = 'IWw0',
  Inn = 'LSin',
  InnScorched = 'LSsi',
  InvulnerabilityField = 'JZif',
  IronGate = 'YOig',
  IronGate2 = 'YOi1',
  IronMaiden = 'DOim',
  KingTerenasStatue = 'YOss',
  LavaCracks = 'DOlc',
  LavaCracks2 = 'GOlc',
  LightningBolt = 'YOlb',
  LilyPad = 'CPlp',
  LilyPad2 = 'LPlp',
  LilyPad3 = 'ZPlp',
  LilyPads = 'AWlp',
  LilyPadsFloating = 'AWfl',
  LilyPadsFloating2 = 'LPfp',
  LogAngled = 'AOla',
  LogAngled2 = 'COla',
  LogStraight = 'AOlg',
  LogStraight2 = 'COlg',
  MagicalLantern = 'XOcl',
  MagicalRunes = 'XOmr',
  MagusConservatory = 'MC00',
  MagusHighrise = 'MH00',
  MagusTurret = 'MT00',
  MarketItemBaubles = 'YOm2',
  MarketItemBaublesAlt = 'YOm3',
  MarketItemProduce = 'YOm4',
  MarketItemProduceAlt = 'YOm5',
  MarketItemTextiles = 'YOm6',
  MarketItemTextilesAlt = 'YOm7',
  MarketStallLarge = 'YOms',
  MarketStallSmall = 'YOm1',
  MineCart = 'DOmc',
  MineCartEmpty = 'DOme',
  MushroomBlue = 'GPsh',
  Mushrooms = 'APms',
  Mushrooms2 = 'CPms',
  Mushrooms3 = 'ZPms',
  NightElfFishingVillage = 'ASv0',
  NightElfFishingVillage2 = 'ASv1',
  NightElfFishingVillage3 = 'ASv2',
  NightElfFishingVillage4 = 'ASv3',
  NightElfFishingVillage5 = 'ASv4',
  NightElfFishingVillageRuined = 'ASx0',
  NightElfFishingVillageRuined2 = 'ASx1',
  NightElfFishingVillageRuined3 = 'ASx2',
  Obelisk = 'AOsk',
  Obelisk2 = 'COob',
  Obelisk3 = 'NOok',
  Obelisk4 = 'YOob',
  Obelisk5 = 'DOob',
  Obelisk6 = 'GOob',
  Obelisk7 = 'IOob',
  ObeliskBroken = 'AObo',
  ObeliskBroken2 = 'CObo',
  ObeliskBroken3 = 'NObk',
  ObeliskGlowing = 'AOob',
  Obstacle = 'OOob',
  OutlandPlants = 'OPop',
  PierPier = 'ASpr',
  PierRuined = 'ASpt',
  PileOfJunk = 'DOjp',
  PileOfTreasure = 'DOtp',
  Pillar = 'IOpr',
  PostHitching = 'LOhp',
  PostLantern = 'LOlp',
  PostLantern2 = 'YOlp',
  PostSign = 'LOsp',
  PottedPlant = 'YPpp',
  PowerGenerator = 'XOcs',
  PyrewoodVillageClockTowerDestroyed = 'PVct',
  RackArmor = 'LOam',
  RackWeapon = 'LOwp',
  RemainsScorched = 'AOsr',
  RisingWater = 'IZrw',
  RisingWaterWide = 'IZww',
  RiverRushes = 'LPrs',
  RockArchway = 'ASra',
  RockArchway2 = 'BSra',
  RockArchway3 = 'LSra',
  RockArchwayDiagonal = 'ASr1',
  RockArchwayDiagonal2 = 'BSr1',
  RockArchwayDiagonal3 = 'LSr1',
  RockMagma = 'ORmk',
  RockPillar = 'BRrp',
  RockSpires = 'BRrs',
  RockSpires2 = 'CRrs',
  RockSpires3 = 'ZRrs',
  RockSpires4 = 'ORrs',
  RockSpiresCinematic = 'BRrc',
  RockSpiresSmall = 'BRsp',
  RockSpiresSmall2 = 'ZRsp',
  Rocks = 'ORrk',
  Rocks2 = 'BRrk',
  Rocks3 = 'LRrk',
  Rocks4 = 'NRrk',
  Rocks5 = 'CRrk',
  Rocks6 = 'DRrk',
  Rocks7 = 'GRrk',
  Rocks8 = 'IRrk',
  Rocks9 = 'ZRrk',
  RocksClusterFloating = 'OZfc',
  RocksFloating = 'ORfk',
  RocksWebbed = 'NRwr',
  Rowboat = 'NWrw',
  RowboatDestroyed = 'NWrd',
  Rubble = 'ASbr',
  Rubble2 = 'CSbr',
  Rubble3 = 'NSrb',
  Rubble4 = 'ORrr',
  Rubble5 = 'ISrb',
  RubbleLarge = 'ZRbd',
  RubbleSmall = 'ZRbs',
  RuinedArch = 'BSar',
  RuinedChunk = 'BSrc',
  RuinedCityCliffEast = 'YCd2',
  RuinedCityCliffNorth = 'YCd1',
  RuinedCityCliffShortEast = 'YCt2',
  RuinedCityCliffShortNorth = 'YCt1',
  RuinedCityCliffShortSouth = 'YCt3',
  RuinedCityCliffShortWest = 'YCt4',
  RuinedCityCliffSouth = 'YCd3',
  RuinedCityCliffWest = 'YCd4',
  RuinedCrystalTower = 'ZOrc',
  RuinedCurvedWall = 'BSrv',
  RuinedDoubleBase = 'ZOtb',
  RuinedDoubleBase2 = 'ZOt2',
  RuinedGoblinShipyard = 'LSrg',
  RuinedGround2x2 = 'YCx1',
  RuinedGround2x22 = 'YCx2',
  RuinedGround2x23 = 'YCx3',
  RuinedGround2x24 = 'YCx4',
  RuinedGround4x2 = 'YCx7',
  RuinedGround4x22 = 'YCx8',
  RuinedGround4x4 = 'YCx5',
  RuinedGround4x42 = 'YCx6',
  RuinedNaturalCliffEast = 'YCp2',
  RuinedNaturalCliffNorth = 'YCp1',
  RuinedNaturalCliffShortEast = 'YCl2',
  RuinedNaturalCliffShortNorth = 'YCl1',
  RuinedNaturalCliffShortSouth = 'YCl3',
  RuinedNaturalCliffShortWest = 'YCl4',
  RuinedNaturalCliffSouth = 'YCp3',
  RuinedNaturalCliffWest = 'YCp4',
  RuinedShip = 'AZrf',
  RuinedTower = 'ZOdt',
  RuinedTower2 = 'ZOd2',
  RuinedTowerBase = 'ZOrb',
  RuinedWall = 'BSrw',
  Ruins = 'ZSrb',
  RuinsBloodyAltar = 'ZOba',
  RuinsBrazier = 'ZObz',
  RuinsBrokenStatue = 'ZOsb',
  RuinsFirepot = 'ZOfp',
  RuinsFountain = 'ZOfo',
  RuinsLibraryShelf = 'ZOls',
  RuinsObelisk = 'ZOob',
  RuinsPillars = 'ZOrp',
  RuinsStatue = 'ZOst',
  RuinsStones = 'ZOss',
  RuinsThrone = 'ZOrt',
  RuinsTrash = 'ZOtr',
  Runes = 'KOdr',
  RuneweaverSquareFountain = 'RSf0',
  Seaweed = 'ZWsw',
  SewerVents = 'DOsv',
  SewerWallpipes = 'DOsw',
  Shells = 'ZOsh',
  ShimmeringPortal = 'OZsp',
  Ship = 'NWsp',
  ShipDestroyed = 'NWsd',
  Shrub = 'ZPsh',
  SignBobsGuns = 'YObg',
  SignTavern = 'YOts',
  SignTraceysArmory = 'YOta',
  SilvermoonArchway = 'SA00',
  SilvermoonArchway45 = 'SA01',
  SilvermoonArchwayEntrance = 'SAe0',
  SilvermoonArchwayEntrance45 = 'SAe1',
  SilvermoonBuildingsDiagonal1 = 'SRbc',
  SilvermoonBuildingsDiagonal2 = 'SRbe',
  SilvermoonBuildingsHorizontal = 'SRbh',
  SilvermoonBuildingsVertical = 'SRbv',
  SilvermoonTowerLarge = 'STdl',
  SilvermoonTowerMedium = 'STdm',
  SilvermoonTowerSmall = 'STds',
  SilvermoonTowerXLarge = 'LSt0',
  SilvermoonWall = 'SWs0',
  SilvermoonWallCorner = 'SWc0',
  SilvermoonWallDoor = 'SWsd',
  SilvermoonWallDoorShort = 'SWse',
  SilvermoonWallEndcap = 'SWe0',
  SilvermoonWallLong = 'SWsl',
  SilvermoonWallShort = 'SWss',
  SilvermoonWall_T = 'SWt0',
  Skull = 'OOsk',
  SkullPile = 'LOsk',
  SkullTorch = 'IOst',
  SkullsOnSticks = 'LOss',
  SlideCityCliffEast = 'YCs2',
  SlideCityCliffNorth = 'YCs1',
  SlideCityCliffShortEast = 'YCo2',
  SlideCityCliffShortNorth = 'YCo1',
  SlideCityCliffShortSouth = 'YCo3',
  SlideCityCliffShortWest = 'YCo4',
  SlideCityCliffSouth = 'YCs3',
  SlideCityCliffWest = 'YCs4',
  SlideNaturalCliffEast = 'YCg2',
  SlideNaturalCliffNorth = 'YCg1',
  SlideNaturalCliffShortEast = 'YCu2',
  SlideNaturalCliffShortNorth = 'YCu1',
  SlideNaturalCliffShortSouth = 'YCu3',
  SlideNaturalCliffShortWest = 'YCu4',
  SlideNaturalCliffSouth = 'YCg3',
  SlideNaturalCliffWest = 'YCg4',
  SmokeSmudge = 'LOsm',
  Snowman = 'IOsm',
  SnowyRock = 'IRrs',
  Stake = 'OOst',
  Stalagmite = 'DRst',
  Stalagmite2 = 'GRst',
  Standard = 'OOsd',
  Statue = 'YOst',
  StatueBlackCitadel = 'KOst',
  StatueGuardianOfAszune = 'AOgs',
  StatueIceSpider = 'IOsl',
  StatueKeeper = 'AOks',
  StatueOfAzshara = 'DOas',
  StatueOfAzshara2 = 'SA02',
  StatueShieldless = 'YOks',
  StatueWhite = 'YOws',
  StrahnbradClockTower = 'SCt0',
  StrahnbradLargeTree = 'SLt0',
  StumpHollow = 'AOhs',
  StumpHollow2 = 'COhs',
  SunWell = 'YOsw',
  SunfurySpireMainTower = 'SSmt',
  SunfurySpireSideTower = 'SSst',
  SunkenRuinsTreeIndestructible = 'ZPtw',
  SunreaverArchway = 'SA03',
  SunreaverDome = 'SD00',
  SunreaverDomeSmall = 'SDs0',
  SunreaverSpire = 'SS00',
  Table = 'DOtb',
  TableAndChair = 'DOtc',
  TableTorture = 'DOtt',
  Tavern = 'YSta',
  TheFrozenThrone = 'IZft',
  ThrallsHut = 'LZth',
  Throne = 'BOth',
  Throne2 = 'YOth',
  Tombstone = 'NOtb',
  Torch = 'LOth',
  TorchGlowing = 'LOtz',
  TotemCentaur = 'BOct',
  TotemLantern = 'AOnt',
  TotemTauren = 'BOtt',
  TowerScorched = 'LSst',
  TrapFire = 'YOf2',
  TrapFrost = 'YOr2',
  TrapSideFire = 'YOf1',
  TrapSideFrost = 'YOr1',
  Trash = 'LOt1',
  TreePlanter = 'YPtp',
  Trough = 'LOtr',
  Tulips = 'ZPf0',
  UndergroundDome = 'JZud',
  VinesCliffside = 'ZCv1',
  VinesCliffside2 = 'ZCv2',
  VinesThorny = 'APtv',
  VinesThorny2 = 'NPth',
  VinyPlant = 'ZPvp',
  VioletHoldArchwayEndpiece = 'VHae',
  VioletHoldMainStructure = 'VHms',
  VioletHoldSpire = 'VHs0',
  VioletHoldSpireSmall = 'VHss',
  Wall90Degree = 'WD00',
  WallBarredLarge = 'DSp9',
  WallBarredLarge2 = 'GSp9',
  WallBarredSmall = 'DSp0',
  WallBarredSmall2 = 'GSp0',
  WallCorner = 'YSw4',
  WallCornerAlt = 'YSw7',
  WallDoor = 'YSwD',
  WallDoorShort = 'YSwE',
  WallEndLantern = 'YSll',
  WallEndLanternNoLight = 'YSlx',
  WallEndShort = 'YSls',
  WallEndTall = 'YSlt',
  WallEndcap = 'YSw5',
  WallEndcap2 = 'WE00',
  WallEndcapEntrance = 'YSwC',
  WallFountain = 'LOwf',
  WallLowDiagonal1 = 'YSw1',
  WallLowDiagonal2 = 'YSw3',
  WallLowHorizontal = 'YSw0',
  WallLowVertical = 'YSw2',
  WallSpire = 'WS01',
  WallSpireAlt = 'WSa0',
  WallStone = 'LOsw',
  WallStraight = 'YSw6',
  WallStraight2 = 'WS00',
  WallStraightLong = 'YSw8',
  WallStraightLong2 = 'WSl0',
  WallStraightShort = 'YSw9',
  WallStraightShort2 = 'WSs0',
  WallStraightTee = 'YSwA',
  WallStraightTeeAlt = 'YSwB',
  WallT = 'WT00',
  WallTAlt = 'WTa0',
  Waterfall = 'LWw0',
  Well = 'LSwl',
  Whale = 'NWwh',
  Wheat = 'LPwh',
  WheatBunch = 'LPwb',
  Wheelbarrow = 'LOwb',
  WheelbarrowBroken = 'LOwr',
  Windmill = 'LSwm',
  WindmillBurned = 'LSwb',
  WorldTree = 'ASwt',
}

type MapDoodad = { oldId: string, newId: string } & Doodad;

export class DoodadContainer extends OEContainer<Doodad> {
  override game = <{[key in Doodads]: Doodad}>objects;
  override map: {[key: string]: MapDoodad } = {};
  override loadModification(object: MapDoodad, modification: Modification) {
    const { id, value } = modification;
    switch(id) {
      case 'dnam': object.name = war3ToTS('string', value); return;
      case 'dcat': object.category = war3ToTS('doodadCategory', value); return;
      case 'dtil': object.tilesets = war3ToTS('tilesetList', value); return;
      case 'dtsp': object.hasTilesetSpecificData = war3ToTS('bool', value); return;
      case 'dfil': object.modelFile = war3ToTS('model', value); return;
      case 'dsnd': object.loopingSound = war3ToTS('soundLabel', value); return;
      case 'dsel': object.selectionSize = war3ToTS('unreal', value); return;
      case 'ddes': object.defaultScale = war3ToTS('unreal', value); return;
      case 'dmis': object.minimumScale = war3ToTS('unreal', value); return;
      case 'dmas': object.maximumScale = war3ToTS('unreal', value); return;
      case 'dcpr': object.canPlaceRandomScale = war3ToTS('bool', value); return;
      case 'duch': object.useClickHelper = war3ToTS('bool', value); return;
      case 'dimc': object.ignoreModelClicks = war3ToTS('bool', value); return;
      case 'dmap': object.maximumPitchAngleDegrees = war3ToTS('unreal', value); return;
      case 'dmar': object.maxRollAngleDegrees = war3ToTS('unreal', value); return;
      case 'dvis': object.visibilityRadius = war3ToTS('unreal', value); return;
      case 'dwlk': object.walkable = war3ToTS('bool', value); return;
      case 'dvar': object.variations = war3ToTS('int', value); return;
      case 'donc': object.placeableOnCliffs = war3ToTS('bool', value); return;
      case 'donw': object.placeableOnWater = war3ToTS('bool', value); return;
      case 'dflt': object.floats = war3ToTS('bool', value); return;
      case 'dshd': object.hasAShadow = war3ToTS('bool', value); return;
      case 'dshf': object.showInFog = war3ToTS('bool', value); return;
      case 'danf': object.animateInFog = war3ToTS('bool', value); return;
      case 'dfxr': object.fixedRotation = war3ToTS('unreal', value); return;
      case 'dptx': object.pathingTexture = war3ToTS('pathingTexture', value); return;
      case 'dsmm': object.minimapShow = war3ToTS('bool', value); return;
      case 'dumc': object.minimapUseCustomColor = war3ToTS('bool', value); return;
      case 'dmmr': object.minimapColor1Red = war3ToTS('int', value); return;
      case 'dmmg': object.minimapColor2Green = war3ToTS('int', value); return;
      case 'dmmb': object.minimapColor3Blue = war3ToTS('int', value); return;
      case 'dvr1': object.tintingColor1Red = war3ToTS('int', value); return;
      case 'dvg1': object.tintingColor2Green = war3ToTS('int', value); return;
      case 'dvb1': object.tintingColor3Blue = war3ToTS('int', value); return;
      case 'dusr': object.onUserSpecifiedList = war3ToTS('bool', value); return;
      default: throw Error(`Unknown modification: ${id}`);
    }
  }
  override saveModifications(gameObject: Doodad, object: MapDoodad): Modification[] {
    const modifications: Modification[] = [];
    if (object.name !== gameObject.name) { modifications.push(tsToWar3('dnam', 'string', object.name)); }
    if (object.category !== gameObject.category) { modifications.push(tsToWar3('dcat', 'doodadCategory', object.category)); }
    if (object.tilesets !== gameObject.tilesets) { modifications.push(tsToWar3('dtil', 'tilesetList', object.tilesets)); }
    if (object.hasTilesetSpecificData !== gameObject.hasTilesetSpecificData) { modifications.push(tsToWar3('dtsp', 'bool', object.hasTilesetSpecificData)); }
    if (object.modelFile !== gameObject.modelFile) { modifications.push(tsToWar3('dfil', 'model', object.modelFile)); }
    if (object.loopingSound !== gameObject.loopingSound) { modifications.push(tsToWar3('dsnd', 'soundLabel', object.loopingSound)); }
    if (object.selectionSize !== gameObject.selectionSize) { modifications.push(tsToWar3('dsel', 'unreal', object.selectionSize)); }
    if (object.defaultScale !== gameObject.defaultScale) { modifications.push(tsToWar3('ddes', 'unreal', object.defaultScale)); }
    if (object.minimumScale !== gameObject.minimumScale) { modifications.push(tsToWar3('dmis', 'unreal', object.minimumScale)); }
    if (object.maximumScale !== gameObject.maximumScale) { modifications.push(tsToWar3('dmas', 'unreal', object.maximumScale)); }
    if (object.canPlaceRandomScale !== gameObject.canPlaceRandomScale) { modifications.push(tsToWar3('dcpr', 'bool', object.canPlaceRandomScale)); }
    if (object.useClickHelper !== gameObject.useClickHelper) { modifications.push(tsToWar3('duch', 'bool', object.useClickHelper)); }
    if (object.ignoreModelClicks !== gameObject.ignoreModelClicks) { modifications.push(tsToWar3('dimc', 'bool', object.ignoreModelClicks)); }
    if (object.maximumPitchAngleDegrees !== gameObject.maximumPitchAngleDegrees) { modifications.push(tsToWar3('dmap', 'unreal', object.maximumPitchAngleDegrees)); }
    if (object.maxRollAngleDegrees !== gameObject.maxRollAngleDegrees) { modifications.push(tsToWar3('dmar', 'unreal', object.maxRollAngleDegrees)); }
    if (object.visibilityRadius !== gameObject.visibilityRadius) { modifications.push(tsToWar3('dvis', 'unreal', object.visibilityRadius)); }
    if (object.walkable !== gameObject.walkable) { modifications.push(tsToWar3('dwlk', 'bool', object.walkable)); }
    if (object.variations !== gameObject.variations) { modifications.push(tsToWar3('dvar', 'int', object.variations)); }
    if (object.placeableOnCliffs !== gameObject.placeableOnCliffs) { modifications.push(tsToWar3('donc', 'bool', object.placeableOnCliffs)); }
    if (object.placeableOnWater !== gameObject.placeableOnWater) { modifications.push(tsToWar3('donw', 'bool', object.placeableOnWater)); }
    if (object.floats !== gameObject.floats) { modifications.push(tsToWar3('dflt', 'bool', object.floats)); }
    if (object.hasAShadow !== gameObject.hasAShadow) { modifications.push(tsToWar3('dshd', 'bool', object.hasAShadow)); }
    if (object.showInFog !== gameObject.showInFog) { modifications.push(tsToWar3('dshf', 'bool', object.showInFog)); }
    if (object.animateInFog !== gameObject.animateInFog) { modifications.push(tsToWar3('danf', 'bool', object.animateInFog)); }
    if (object.fixedRotation !== gameObject.fixedRotation) { modifications.push(tsToWar3('dfxr', 'unreal', object.fixedRotation)); }
    if (object.pathingTexture !== gameObject.pathingTexture) { modifications.push(tsToWar3('dptx', 'pathingTexture', object.pathingTexture)); }
    if (object.minimapShow !== gameObject.minimapShow) { modifications.push(tsToWar3('dsmm', 'bool', object.minimapShow)); }
    if (object.minimapUseCustomColor !== gameObject.minimapUseCustomColor) { modifications.push(tsToWar3('dumc', 'bool', object.minimapUseCustomColor)); }
    if (object.minimapColor1Red !== gameObject.minimapColor1Red) { modifications.push(tsToWar3('dmmr', 'int', object.minimapColor1Red)); }
    if (object.minimapColor2Green !== gameObject.minimapColor2Green) { modifications.push(tsToWar3('dmmg', 'int', object.minimapColor2Green)); }
    if (object.minimapColor3Blue !== gameObject.minimapColor3Blue) { modifications.push(tsToWar3('dmmb', 'int', object.minimapColor3Blue)); }
    if (object.tintingColor1Red !== gameObject.tintingColor1Red) { modifications.push(tsToWar3('dvr1', 'int', object.tintingColor1Red)); }
    if (object.tintingColor2Green !== gameObject.tintingColor2Green) { modifications.push(tsToWar3('dvg1', 'int', object.tintingColor2Green)); }
    if (object.tintingColor3Blue !== gameObject.tintingColor3Blue) { modifications.push(tsToWar3('dvb1', 'int', object.tintingColor3Blue)); }
    if (object.onUserSpecifiedList !== gameObject.onUserSpecifiedList) { modifications.push(tsToWar3('dusr', 'bool', object.onUserSpecifiedList)); }
    return modifications;
  }
}